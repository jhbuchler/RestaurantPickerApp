// <auto-generated />
using DataLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLibrary.Migrations
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyDataModels.Convenience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Conveniences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Sit Down"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Take Out"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Fast Food"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Unassigned"
                        });
                });

            modelBuilder.Entity("MyDataModels.Cuisine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cuisines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Italian"
                        },
                        new
                        {
                            Id = 2,
                            Type = "American"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Mexican"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Korean"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Chinese"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Unassigned"
                        });
                });

            modelBuilder.Entity("MyDataModels.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ConvenienceId")
                        .HasColumnType("int");

                    b.Property<int>("CuisineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConvenienceId");

                    b.HasIndex("CuisineId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConvenienceId = 1,
                            CuisineId = 1,
                            Name = "Olive Garden",
                            Price = 2
                        },
                        new
                        {
                            Id = 2,
                            ConvenienceId = 3,
                            CuisineId = 3,
                            Name = "Taco Bell",
                            Price = 1
                        },
                        new
                        {
                            Id = 3,
                            ConvenienceId = 1,
                            CuisineId = 2,
                            Name = "Ruth's Chriss",
                            Price = 3
                        },
                        new
                        {
                            Id = 4,
                            ConvenienceId = 2,
                            CuisineId = 2,
                            Name = "Cookout",
                            Price = 1
                        });
                });

            modelBuilder.Entity("MyDataModels.Restaurant", b =>
                {
                    b.HasOne("MyDataModels.Convenience", "Convenience")
                        .WithMany("Restaurants")
                        .HasForeignKey("ConvenienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyDataModels.Cuisine", "Cuisine")
                        .WithMany("Restaurants")
                        .HasForeignKey("CuisineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Convenience");

                    b.Navigation("Cuisine");
                });

            modelBuilder.Entity("MyDataModels.Convenience", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("MyDataModels.Cuisine", b =>
                {
                    b.Navigation("Restaurants");
                });
#pragma warning restore 612, 618
        }
    }
}
